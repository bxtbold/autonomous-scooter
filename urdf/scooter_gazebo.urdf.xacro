<?xml version="1.0"?>

<robot name="scooter" xmlns:xacro="https://www.ros.org/wiki/xacro">

    <xacro:include filename="$(find autonomous-scooter)/urdf/properties.xacro"/>

    <!-- base_link -->    
    <link name="base_link"/>

    <!-- steering_link -->

    <link name="steering_link">
        <visual>
            <geometry>
                <cylinder radius="${thick_steering}" length="${steering_length}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <material name='blue'/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${thick_steering}" length="${steering_length}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>           
        </collision>
        <mass value="${mass_steering_link}"/>
        <inertia ixx="${steering_ixx}" ixy="${steering_ixy}" ixz="${steering_ixz}" iyy="${steering_iyy}" iyz="${steering_iyz}" izz="${steering_izz}"/>
    </link>

        <joint name="base_to_steering_joint" type="revolute">
            <parent link="base_link"/>
            <child link="steering_link"/>
            <origin xyz="-${(steering_length/2 * cos(alpha))} 0.0 ${(steering_length/2 * sin(alpha)) + rad_front_wheel}" rpy="0.0 -${pi/2 - alpha} 0.0"/>
            <limit lower="-${pi/4}" upper="${pi/4}" effort="10" velocity="1.0"/>
            <axis xyz="0 0 1"/>
        </joint>

        <transmission name="steering_transmission">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="base_to_steering_joint">
                <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            </joint>
            <actuator name="steering_motor">
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>


    <!-- front wheel -->
    <link name="front_wheel_link">
        <visual>
            <geometry>
                <cylinder length="${thick_wheel}" radius="${rad_front_wheel}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
            <material name='black'/>
        </visual>      
        <collision>
            <geometry>
                <cylinder length="${thick_wheel}" radius="${rad_front_wheel}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>           
        </collision>
        <mass value="${mass_front_wheel}"/>
        <inertia ixx="${front_ixx}" ixy="${front_ixy}" ixz="${front_ixz}" iyy="${front_iyy}" iyz="${front_iyz}" izz="${front_izz}"/>
    </link>

        <joint name="steering_to_front_joint" type="continuous">
            <parent link="steering_link"/>
            <child link="front_wheel_link"/>
            <origin xyz="0.0 0.0 -${steering_length/2}" rpy="0.0 0.0 0.0"/>
            <axis xyz="0 1 0"/>
            <limit effort="50" velocity="5.0"/>
        </joint>

        <transmission name="wheel_motor_transmission">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="steering_to_front_joint">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="wheel_motor">
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>

        <gazebo reference="front_wheel_link">
            <mu1 value="200.0"/>
            <mu2 value="100.0"/>
            <kp value="10000000.0" />
            <kd value="1.0" />>
        </gazebo>



    <!-- frame_link -->

    <link name="frame_link">
        <visual>
            <geometry>
                <mesh filename="package://autonomous-scooter/meshes/frame.stl" scale="${scale} ${scale} ${scale}"/>
            </geometry>
            <material name='black'/>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} ${2* pi/180} ${pi}"/>
        </visual>

        <collision>
            <geometry>
                <mesh filename="package://autonomous-scooter/meshes/frame.stl" scale="${scale} ${scale} ${scale}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} ${2* pi/180} ${pi}"/>
        </collision>

        <mass value="0.0"/>
        <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </link>

        <joint name="base_to_frame_joint" type="fixed">
            <parent link="base_link"/>
            <child link="frame_link"/>
            <origin xyz="-0.728 0.0 0.109" rpy="0.0 0.0 0.0"/>
        </joint>



    <!-- back axis -->
    <link name="axis_link">
        <visual>
            <geometry>
                <cylinder radius="0.008" length="${length_back_axis}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
            <material name='gray'/>
        </visual>

        <collision>
            <geometry>
                <cylinder radius="0.01" length="${length_back_axis}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
        </collision>

        <mass value="1.0"/>
        <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </link>

        <joint name="axis_joint" type="fixed">
            <parent link="frame_link"/>
            <child link="axis_link"/>
            <origin xyz="-0.14 0.0 -0.008" rpy="0.0 0.0 0.0"/>
        </joint>



    <!-- back wheel left -->
    <link name="back_wheel_left_link">
        <visual>
            <geometry>
                <cylinder length="${thick_wheel}" radius="${rad_back_wheel}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <material name='black'/>
        </visual>

        <collision>
            <geometry>
                <cylinder length="${thick_wheel}" radius="${rad_back_wheel}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        </collision>

        <mass value="${mass_back_wheel}"/>
        <inertia ixx="${back_ixx}" ixy="${back_ixy}" ixz="${back_ixz}" iyy="${back_iyy}" iyz="${back_iyz}" izz="${back_izz}"/>
    </link>

        <joint name="base_to_back_left_joint" type="continuous">
            <parent link="axis_link"/>
            <child link="back_wheel_left_link"/>
            <origin xyz="0 ${length_back_axis/2} 0.0" rpy="${pi/2} 0.0 0.0"/>
            <axis xyz="0 0 1"/>
        </joint>
        <gazebo reference="back_wheel_left_link">
            <mu1 value="200.0"/>
            <mu2 value="100.0"/>
            <kp value="10000000.0" />
            <kd value="1.0" />>
        </gazebo>

    <!-- back wheel right -->
    <link name="back_wheel_right_link">
        <visual>
            <geometry>
                <cylinder length="${thick_wheel}" radius="${rad_back_wheel}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <material name='black'/>
        </visual>

        <collision>
            <geometry>
                <cylinder length="${thick_wheel}" radius="${rad_back_wheel}"/>
            </geometry>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>            
        </collision>

        <mass value="${mass_back_wheel}"/>
        <inertia ixx="${back_ixx}" ixy="${back_ixy}" ixz="${back_ixz}" iyy="${back_iyy}" iyz="${back_iyz}" izz="${back_izz}"/>

    </link>

        <joint name="base_to_back_right_joint" type="continuous">
            <parent link="axis_link"/>
            <child link="back_wheel_right_link"/>
            <origin xyz="0.0 -${length_back_axis / 2} 0.0" rpy="${pi/2} 0.0 0.0"/>
            <axis xyz="0 0 1"/>
        </joint>
        <gazebo reference="back_wheel_right_link">
            <mu1 value="200.0"/>
            <mu2 value="100.0"/>
            <kp value="10000000.0" />
            <kd value="1.0" />>
        </gazebo>


    <!-- depth camera -->
    <xacro:include filename="$(find autonomous-scooter)/urdf/realsense_urdf/_d435.urdf.xacro" />
    <xacro:sensor_d435 parent="steering_link" use_nominal_extrinsics="false" add_plug="false" use_mesh="true">
        <origin xyz="0.03 0 0.1" rpy="0 0 0"/>
    </xacro:sensor_d435>    


    <!-- Gazebo plugin for ROS Control -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>


</robot>